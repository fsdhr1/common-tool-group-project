@startuml

title __UTILS's Class Diagram__\n

  namespace com.gykj.ossmodule {
    namespace utils {
      interface com.gykj.ossmodule.utils.DownloadListener {
          {abstract} + onFail()
          {abstract} + onProgressChange()
          {abstract} + onSuccess()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      class com.gykj.ossmodule.utils.OssClientUtil {
          - mContext : Context
          {static} - mLoggingInterceptor : HttpLoggingInterceptor
          - mOssClientList : Map<OssFileBean, OSSClient>
          - mToken : String
          + OssClientUtil()
          + getOssClient()
          - initOssClient()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      class com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask {
          + GetTokenTask()
          # doInBackground()
          # onCancelled()
          # onPostExecute()
          # onPreExecute()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      interface com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask.TokenCallBack {
          {abstract} + getTokenSuccess()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      class com.gykj.ossmodule.utils.OssDownloadUtil {
          {static} + downloadObjectToFile()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      class com.gykj.ossmodule.utils.OssUploadUtil {
          {static} + generateRouter()
          {static} + uploadAsync()
          {static} + uploadMultipleAsync()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      class com.gykj.ossmodule.utils.PrivateOssClientUtil {
          {static} - mLoggingInterceptor : HttpLoggingInterceptor
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      class com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask {
          - mUrl : String
          + GetTokenTask()
          # doInBackground()
          # onCancelled()
          # onPostExecute()
          # onPreExecute()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      interface com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask.TokenCallBack {
          {abstract} + getTokenSuccess()
      }
    }
  }
  

  namespace com.gykj.ossmodule {
    namespace utils {
      interface com.gykj.ossmodule.utils.UploadListener {
          {abstract} + onFail()
          {abstract} + onProgressChange()
          {abstract} + onSuccess()
      }
    }
  }
  

  com.gykj.ossmodule.utils.OssClientUtil +-down- com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask
  com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask -up-|> android.os.AsyncTask
  com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask o-- com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask.TokenCallBack : mCallBack
  com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask +-down- com.gykj.ossmodule.utils.OssClientUtil.GetTokenTask.TokenCallBack
  com.gykj.ossmodule.utils.PrivateOssClientUtil +-down- com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask
  com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask -up-|> android.os.AsyncTask
  com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask o-- com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask.TokenCallBack : mCallBack
  com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask +-down- com.gykj.ossmodule.utils.PrivateOssClientUtil.GetTokenTask.TokenCallBack


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
